[{"title":"特性","type":0,"sectionRef":"#","url":"/doc.github.io/docs/introduction/characteristic","content":"特性 基于 Koa 开发, 底层框架性能优异。基于 Typescript 进行项目开发，更安全，更高效。基于 routing-controllers 进行路由的定义，完善的注解API，开发效率更高提供基于 Yunfly 强大的插件能力高度扩展的框架开发机制内置多进程能力渐进式开发","keywords":""},{"title":"与社区框架差异","type":0,"sectionRef":"#","url":"/doc.github.io/docs/introduction/framework-differences","content":"与社区框架差异 能力\tyunfly\teggjs\tnestjsTypescript\t✅\t❌[支持但不友好]\t✅ cluster\t✅\t✅\t❌ openapi\t✅\t❌\t✅ 框架约束\t部分约束\t约束\t自由 扩展模型\t插件\t插件\t模块","keywords":""},{"title":"介绍","type":0,"sectionRef":"#","url":"/doc.github.io/docs/introduction/introduce","content":"","keywords":""},{"title":"Yunfly 与 Koa2​","type":1,"pageTitle":"介绍","url":"/doc.github.io/docs/introduction/introduce#yunfly-与-koa2","content":"Node.js 是一个异步的世界, 官方 API 支持的都是 callback 形式的异步编程模型, 这会带来许多问题, 因此社区提供了各种异步的解决方案, 最终胜出的是 Promise。 async function 是语言层面提供的语法糖, 在 async function 中, 我们可以通过 await 关键字来等待一个 Promise 被 resolve（或者 reject, 此时会抛出异常）, Node.js 现在的 LTS 版本（8.x）已原生支持。 const fn = async function() { const user = await getUser(); const posts = await fetchPosts(user.id); return { user, posts }; }; fn().then(res =&gt; console.log(res)).catch(err =&gt; console.error(err.stack));  "},{"title":"Koa2​","type":1,"pageTitle":"介绍","url":"/doc.github.io/docs/introduction/introduce#koa2","content":"Koa2 是一个新的 web 框架，由 Express 幕后的原班人马打造， 致力于成为 web 应用和 API 开发领域中的一个更小、更富有表现力、更健壮的基石。 "},{"title":"Yunfly​","type":1,"pageTitle":"介绍","url":"/doc.github.io/docs/introduction/introduce#yunfly","content":"Koa 是一个非常优秀的框架，然而对于企业级应用来说，它还比较基础。Yunfly 使用 Koa 做为底层 HTTP 框架, 在其基础上提升了一个抽象级别, 提供了更多的能力与约束规范。 "},{"title":"框架技术栈​","type":1,"pageTitle":"介绍","url":"/doc.github.io/docs/introduction/introduce#框架技术栈","content":"Koa2 node.js http 框架, async await异步编程 参考文档typescript 微软开发的自由和开源的编程语言, 它是JavaScript的一个超集, 添加了可选的静态类型和基于类的面向对象编程 参考文档routing-controllers 使用装饰器的方式来进行koa-router的开发 参考文档typedi: 依赖注入插件工具 参考文档grpc: 一个高性能、开源和通用的 RPC 框架 参考文档log4js: javascript 的 log 日志插件 参考文档 "}]